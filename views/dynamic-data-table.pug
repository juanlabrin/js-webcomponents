extends layout 

block content
    
    .container.mt-3
        .card.mb-3
            .card-body
                h1=title
        include navbar.pug
        .card.mb-3
            .card-body
                h2 Dynamic Data Table WebComponent Description:
                p This Dynamic Data Table Web Component is a versatile and customizable JavaScript-based solution for displaying data in a table format on your website. This web component is designed to be highly parameterized, allowing you to tailor the table's appearance and functionality to suit your specific needs. Here are some of its key features:
                ul 
                    li 
                        strong Data Source Flexibility: 
                        Connect seamlessly to server data sources or use JSON-formatted data. Fetch live data from your server or work with static data.
                    li 
                        strong Column Configuration: 
                        You can specify which columns you want to display in the table. This flexibility ensures that you can show only the relevant data to your users.
                    li  
                        strong Pagination: 
                        Enable pagination to divide your data into manageable chunks. Users can navigate through multiple pages of data, making it easier to find what they're looking for.
                    li 
                        strong Rows Per Page: 
                        Customize the number of rows displayed per page, providing a smooth user experience, even with large datasets.
                    li 
                        strong Column Sorting: 
                        Users can easily sort columns in ascending or descending order. This feature is valuable for quickly organizing data.
                    li 
                        strong Table Caption: 
                        Give your table a meaningful name or caption to provide context and enhance accessibility.
                p This Dynamic Data Table Web Component is designed with simplicity and usability in mind. It's an excellent addition to any web application or website that requires the presentation of data in a structured and organized manner, with the added benefit of versatile data source options.
        .card.mb-3 
            .card-header
                h2 DDT - Examples
            .card-body
                .card.mb-3 
                    .card-body
                        .row.mb-3 
                            .col-md-5
                                .note.info
                                        h3 Dynamic Data Table usage.
                                        p With all options enabled except <strong>showId</strong> by default false & <strong>data-source</strong> attribute link.
                                        img(src="images/ddt-items.png" width="100%")
                                                                        
                            .col-md-7.component-container
                                dynamic-data-table.component(data-source="/items/list" id="items-ddt")
                .card.mb-3 
                    .card-body
                        .row 
                            .col-md-5 
                                .note.info
                                        h3 Dynamic Data Table usage. 
                                        p With no options & only <strong>data-source</strong> attribute link.
                                        img(src="images/ddt-posts.png" width="100%")
                            .col-md-7.component-container
                                dynamic-data-table.component(data-source="/posts/list")
                .card.mb-3 
                    .card-body
                        .row 
                            .col-md-5 
                                .note.info
                                        h3 Dynamic Data Table usage. 
                                        p With <strong>showId, showPagination, rowsPerPage, showCaption & columns</strong> options settings & <strong>data-source</strong> attribute link.
                                        img(src="images/ddt-invoices.png" width="100%")
                            .col-md-7.component-container
                                dynamic-data-table.component(data-source="/invoices/list" id="invoices-ddt")
                .card.mb-3 
                    .card-body                        
                        .row 
                            .col-md-5 
                                .note.info
                                        h3 Dynamic Data Table usage. 
                                        p With no options & only <strong>data-source</strong> attribute link, whitout data response.
                                        img(src="images/ddt-users.png" width="100%")
                            .col-md-7.component-container
                                dynamic-data-table.component(data-source="/users/list")
                .card.mb-3 
                    .card-body
                        .row 
                            .col-md-5
                                .note.info
                                        h3 Dynamic Data Table usage. 
                                        p With no options & no <strong>data-source</strong> attribute link.
                                        img(src="images/ddt-no-datasource.png" width="100%")
                            .col-md-7.component-container                                 
                                dynamic-data-table.component
                                p Table instantiated but without attributes (not initializated)

    script(type='module', src='/js/dynamic-data-table/dynamic-data-table.class.js')
    script.
        const ddtItems = document.getElementById('items-ddt');
        let optionsDDTItems = {                    
                showSorting: true,
                sortByColumn: 2,
                showCaption: true,
                showPagination: true,
                rowsPerPage: 10,
                columns: ['_id', 'itemType', 'sku', 'description', 'price', 'cost']
            }
        ddtItems.setAttribute('settings', JSON.stringify(optionsDDTItems));

        const ddtInvoices = document.getElementById('invoices-ddt');     
        let optionsDDTInvoices = {
            showId: true,
            showSorting: true,
            sortByColumn: 2,
            showPagination: true,
            rowsPerPage: 10,
            showCaption: true,
            columns: ['_id', 'createdAt', 'invoiceId', 'total']
        }
        ddtInvoices.setAttribute('settings', JSON.stringify(optionsDDTInvoices));
        